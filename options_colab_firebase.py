# -*- coding: utf-8 -*-
"""Options-colab-firebase

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LnVLP1RO_MK2_SWSjDT40KXdZYRHO1q5
"""

pip install requests

pip install python-firebase

pip install git+https://github.com/ozgur/python-firebase

pip install h5py

pip install typing-extensions

pip install wheel

pip install pyrebase

from firebase import firebase
import pyrebase

firebase = firebase.FirebaseApplication("https://fir-react-c8808-default-rtdb.firebaseio.com/", None)

# # for Testing
# fbconfig = {
#     "apiKey": "AIzaSyBGvj7tWcryWL2NIzqC54MPUug3_OTK-T4",
#     "authDomain": "fir-react-c8808.firebaseapp.com",
#     "databaseURL": "https://fir-react-c8808-default-rtdb.firebaseio.com",
#     "projectId": "fir-react-c8808",
#     "storageBucket": "fir-react-c8808.appspot.com",
#     "messagingSenderId": "862182846669",
#     "appId": "1:862182846669:web:cd65474a47f3e2eae83984"
#             }

# firebase = pyrebase.initialize_app(fbconfig)
# database = firebase.database()

# For Real Experiments
fbconfig = {
  "apiKey": "AIzaSyA36Na3KLD9xNMWzpk1yfjiMrdkAHUrwes",
  "authDomain": "vresearch-facd2.firebaseapp.com",
  "databaseURL": "https://vresearch-facd2-default-rtdb.asia-southeast1.firebasedatabase.app",
  "projectId": "vresearch-facd2",
  "storageBucket": "vresearch-facd2.appspot.com",
  "messagingSenderId": "891001235393",
  "appId": "1:891001235393:web:5912c9641dcda0169bb140"
};


firebase = pyrebase.initialize_app(fbconfig)
database = firebase.database()
db = database.child("user")

"""**해당하는 셀을 실행해주시면 됩니다.**

-----------
첫번째 (음성 피드백)

이제 공기청정기가 공기질 피드백 방식을 어떤 방식으로 주는걸 참가자분께서 선호하는지 알아보려고 하는데요. 총 세가지 유형의 피드백 방식을 보여드리겠습니다. 

첫번째는 음성 피드백 입니다.
[누르기] 한번 실내 공기질 수치를 보시겠어요? 미세먼지 수치가 20으로 지금 충분히 좋네요.
"""

data = {"task":1}
db = database.child("user")
db.set(data)

"""-----------
두번째 (황사 불어옴 - 음성)
그런데 지금 황사가 불어오는 것 같네요. 
[누르기]
네, 미세먼지 숫자가 보이시죠?

네 여기까지가 음성 피드백이었습니다.
"""

data = {"task":2}
db = database.child("user")
db.set(data)

"""-----------
세번째 (비프음 피드백 - 켜는 소리)

다음으로 두번째는 '비프음 피드백'을 체험해보겠습니다.

방금까지 황사때문에 공기질이 나빴었죠?
[누르기] 지금은 어때보이세요?
참가자 대답:~~~~
그러면 공기질이 지금 좋으니까 더이상 전원을 켜고있을 필요가 없어보여요. 한번 꺼보시겠어요?

네, 전원이 잘 꺼졌네요. 그치만만 그래도 실험진행을 위해 다시 한번 켜주시길 바랍니다.

네 여기까지가 두번째 비프음 피드백 체험이었습니다.
"""

data = {"task":3}
db = database.child("user")
db.set(data)

"""-----------
네번째(공청기 꺼지는 소리)

이번에는 세번째 피드백인 컬러피드백을 체험해보겠습니다.
[누르기]
네, 미세먼지지 수치가 어떤가요? (파란색)
"""

data = {"task":4}
db = database.child("user")
db.set(data)

"""하지만 공기질이 조금 나빠졌을 때는 어떻게 변할까요? (초록색)
[누르기]

"""

data = {"task":5}
db = database.child("user")
db.set(data)

"""여섯번째 (피드백 시나리오-빨간불)
다시 한번 공기질이 변합니다. 이번엔 황사가 불어옵니다. [누르기]

네, 공기질 수치를 뜻하는 불빛이 바뀌었어요. (빨간색)
공기질 수치를 한번 확인해주시겠어요?
네 이렇게 세번째 컬러 피드백 체험이 끝났습니다.
"""

data = {"task":6}
db = database.child("user")
db.set(data)

"""-----------
일곱번째 (자동화 시나리오-1)

그럼 여기까지가 에어봇의 피드백 방식 3가지 체험이었습니다.


다음으로는 공기청정기의 자동화 방식을 체험해보겠습니다.
공기청정기의 자동화 방식은 총 4단계가 있습니다. 지금부터 각 단계를 체험해보도록 하겠습니다.
.
.
.

먼저 1단계를를 체험해볼게요.
[누름]
네 리모컨이 떴는데요. 바닥의 빨간 공간에 공기청정기가 움직일 수 있도록 '전진'버튼을 눌러주세요. (빨간색 원위에 정확히 올라가야, '띠링-'소리가 나면서 빨간 원이 없어짐. 확인하고 다음으로 넘어가기)

네 이렇게 1단계를 체험해보셨습니다.
"""

data = {"task":7}
db = database.child("user")
db.set(data)

"""-----------
여덟번째 (자동화 시나리오-2)

이제 2단계를 체험해보겠습니다. 사용자가 미리 예약해둔 명령에 따라 움직이는 방식입니다.

[누르기]
네 이렇게 정보창이 떴는데요. 아직 예약하기 버튼은 누르지 말아주시고, 어떻게 쓰여잇는지 한번 보겠습니다.

오후 7시에 소파쪽에서 주방쪽으로 예약을 해보겠습니다.

참가자가 누름:

네 시계를 확인해보니 오후7시가 되었고, 잘 움직이고 있네요.

이렇게 2단계를 체험해보셨습니다.
"""

data = {"task":8}
db = database.child("user")
db.set(data)

"""-----------
아홉번째 (자동화 시나리오-3)

네 이제 3단계를 체험해보겠습니다.
[누름] 네 아직 버튼을 누르지 말아주세요. 레벨3는 보시다시피 원하는 장소를 입력해 놓는 것입니다. 그이후 실시간 환경정보를 에어봇이 인식해서 알아서 그 장소로 갑니다. 
이제 베란다로 장소입력 확인버튼을 눌러주세요. 네, 시작하기 알림창이 떴는데 한번 읽어봐주시, 바로 버튼 또 눌러주시면 됩니다.

네 이렇게 3단계를 체험해보셨습니다. 

"""

data = {"task":9}
db = database.child("user")
db.set(data)

"""-----------
열번째 (자동화 시나리오-4)

네 이제 4단계를 체험해보겠습니다. 
[누름] 보시다시피, 4단계는 공기청정기가 완전 자동으로 공간별 정보를 인식하여 청정이 필요한곳으로 움직입니다.

4단계의 경우,잠깐 일어나셔서 움직이는 모습을 확인해보겠어요? (피험자 위치 확인: 룸스케일 경계 벗어나지 않도록)


네 이렇게 자동화 방식 또 체험해보셨습니다.

이것으로 VR실험 마치겠습니다.


"""

data = {"task":10}
db = database.child("user")
db.set(data)